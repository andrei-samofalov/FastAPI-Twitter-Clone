#name: build with cache
#on: [ pull_request ]
#jobs:
#  linters:
#    runs-on: [ ubuntu-latest ]
#    steps:
#
#      - uses: actions/checkout@v3
#
#      - name: Install poetry
#        run: pipx install poetry
#
#      - uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#          cache: 'poetry'
#
#      - name: Cache Build
#        id: cache-build
#        uses: actions/cache@v3
#        with:
#          path: /home/runner/.cache/pypoetry/virtualenvs
#          key: poetry-dependencies
#
#      - name: Install Dependencies
#        if: steps.cache-build.outputs.cache-hit != 'true'
#        run: poetry install
#
#      - name: Start checks
#        run: |
#          poetry run flake8 -v .
#          poetry run black . --check --diff
#
#  tests:
#    runs-on: [ ubuntu-latest ]
#    steps:
#
#      - uses: actions/checkout@v3
#
#      - name: Install poetry
#        run: pipx install poetry
#
#      - uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#          cache: 'poetry'
#
#      - name: Cache Build
#        id: cache-build
#        uses: actions/cache@v3
#        with:
#          path: /home/runner/.cache/pypoetry/virtualenvs
#          key: poetry-dependencies
#
#      - name: Install Dependencies
#        if: steps.cache-build.outputs.cache-hit != 'true'
#        run: poetry install
#
#      - name: Start Test PostgreSQL
#        run: docker compose -f tests/docker-compose.yaml up -d
#
#      - name: Start tests
#        run: poetry run coverage run -m pytest -vv
#
#      - name: Coverage report
#        run: poetry run coverage report -m
